{"version":3,"sources":["logo.svg","components/NumbersLister.js","App.js","reportWebVitals.js","index.js"],"names":["columns","title","dataIndex","filters","text","value","filterSearch","onFilter","record","country","includes","width","valid","NumbersLister","props","getNumbers","axios","get","then","res","setState","loading","numbers","data","map","n","catch","error","console","log","message","state","selectedExperiences","searchTerm","selectedCountry","selectedState","this","dataSource","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,I,0ECoBTA,EAAU,CACd,CACEC,MAAO,UACPC,UAAW,UACXC,QAAS,CACP,CACEC,KAAM,WACNC,MAAO,YAET,CACED,KAAM,WACNC,MAAO,YAET,CACED,KAAM,UACNC,MAAO,WAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,SACNC,MAAO,WAGXC,cAAc,EACdC,SAAU,SAACF,EAAOG,GAAR,OAAmBA,EAAOC,QAAQC,SAASL,IACrDM,MAAO,OAET,CACEV,MAAO,QACPC,UAAW,QACXC,QAAS,CACP,CACEC,KAAM,QACNC,MAAO,SAET,CACED,KAAM,UACNC,MAAO,YAGXE,SAAU,SAACF,EAAOG,GAAR,OAAmBA,EAAOI,MAAMF,SAASL,IACnDC,cAAc,EACdK,MAAO,OAET,CACEV,MAAO,eACPC,UAAW,cACXS,MAAO,OAET,CACEV,MAAO,SACPC,UAAW,SACXS,MAAO,QAuDIE,E,kDAlDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBRC,WAAa,WACXC,IACGC,IADH,qCAEGC,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEC,SAAS,IACzB,IAAIC,EAAUH,EAAII,KAClBD,EAAUA,EAAQE,KAAI,SAACC,GAErB,OADAA,EAAEb,MAAQa,EAAEb,MAAQ,QAAU,UACvBa,KAIT,EAAKL,SAAS,CAAEE,QAASA,OAE1BI,OAAM,SAACC,GACN,EAAKP,SAAS,CAAEC,SAAS,IACzBO,QAAQC,IAAIF,GACZ,EAAKP,SAAS,CACZO,MAAOA,EAAMG,QAAUH,EAAMG,QAAU,qBAjC7C,EAAKC,MAAQ,CACXT,QAAS,GACTU,oBAAqB,GACrBC,WAAY,GACZC,gBAAiB,GACjBC,cAAe,GACfd,SAAS,EACTM,MAAO,IATQ,E,qDAanB,WACES,KAAKrB,e,oBA0BP,WACE,OACE,qCACwB,KAArBqB,KAAKL,MAAMJ,MAAe,6BAAKS,KAAKL,MAAMJ,QAAc,GACzD,cAAC,IAAD,CAAO3B,QAASA,EAASqC,WAAYD,KAAKL,MAAMT,iB,GA7C5BgB,IAAMC,WCrEnBC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e9c264b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n// import { DataTable, Checkbox, DataTableSkeleton, Pagination } from 'carbon-components-react';\n// import { Filter16 } from '@carbon/icons-react';\nimport axios from 'axios';\nimport { Table } from 'antd';\n\n// const {\n//   Table,\n//   TableBody,\n//   TableContainer,\n//   TableHead,\n//   TableHeader,\n//   TableRow,\n//   TableSelectAll,\n//   TableToolbar,\n//   TableToolbarContent,\n//   TableToolbarMenu,\n//   TableToolbarSearch,\n// } = DataTable;\n\nconst columns = [\n  {\n    title: 'Country',\n    dataIndex: 'country',\n    filters: [\n      {\n        text: 'Cameroon',\n        value: 'Cameroon',\n      },\n      {\n        text: 'Ethiopia',\n        value: 'Ethiopia',\n      },\n      {\n        text: 'Morocco',\n        value: 'Morocco',\n      },\n      {\n        text: 'Mozambique',\n        value: 'Mozambique',\n      },\n      {\n        text: 'Uganda',\n        value: 'Uganda',\n      },\n    ],\n    filterSearch: true,\n    onFilter: (value, record) => record.country.includes(value),\n    width: '25%',\n  },\n  {\n    title: 'State',\n    dataIndex: 'valid',\n    filters: [\n      {\n        text: 'Valid',\n        value: 'Valid',\n      },\n      {\n        text: 'Invalid',\n        value: 'Invalid',\n      },\n    ],\n    onFilter: (value, record) => record.valid.includes(value),\n    filterSearch: true,\n    width: '25%',\n  },\n  {\n    title: 'Country Code',\n    dataIndex: 'countryCode',\n    width: '25%',\n  },\n  {\n    title: 'Number',\n    dataIndex: 'number',\n    width: '25%',\n  },\n];\n\nclass NumbersLister extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numbers: [],\n      selectedExperiences: [],\n      searchTerm: '',\n      selectedCountry: '',\n      selectedState: '',\n      loading: true,\n      error: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getNumbers();\n  }\n\n  getNumbers = () => {\n    axios\n      .get(`http://localhost:8080/api/numbers`)\n      .then((res) => {\n        this.setState({ loading: false });\n        let numbers = res.data;\n        numbers = numbers.map((n) => {\n          n.valid = n.valid ? 'Valid' : 'Invalid';\n          return n;\n        });\n        // console.log(res);\n        // console.log(numbers);\n        this.setState({ numbers: numbers });\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        this.setState({\n          error: error.message ? error.message : 'Server error',\n        });\n      });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.error !== '' ? <h1>{this.state.error}</h1> : ''}\n        <Table columns={columns} dataSource={this.state.numbers} />\n      </>\n    );\n  }\n}\n\nexport default NumbersLister;\n","import logo from './logo.svg';\nimport './App.css';\nimport NumbersLister from './components/NumbersLister';\n\nfunction App() {\n  return (\n    <NumbersLister />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}